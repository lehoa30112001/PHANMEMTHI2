<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEUAAABbCAYAAAAlUUjCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAAA/5JREFUeF7tnItV4zAQRSmBEiiBEighJVACJdABJVBCSqAEStgSKAHuszWJPKs4
        HzuOrMw9Z85y7LFW78WSJX/0UOL39/eJeCe+iZ8ULSE9W+KDeEqyy5DwmBJbM+EY78mCIeyQIV9dyn3y
        kazoYYMMUVPx6IyRUTrVWopDP/4mWdKZov4jR2a8EY8ppTmkjfDm/NhOdap5H6K/xzufhkCrbyGv2qgz
        Iuc15d8F6H3uZe/YaqPamPGdcu8KdP/r5Xf8+A2fKe+uQLeGIUZnSt6fDC9LdwK6BxcabcgJUyBMAXSH
        KR50hykedIcpHnSHKR50hykedIcpHnQvawplasKp2egtQlOYozN9chY3xU+4lubojJ+c5ZsP5b4SnzeI
        t1SFUciLPsWD7jDFg+4wxYPuMMWD7jDFg+4wxYPuMMWD7jDFg+4wxYPueUwh1x7Gl0aStcSyI1pyNeFa
        A8vNfcjVfEaPHGsO/XB1TghrB91higfdYYoH3WGKB91higfdYYoH3WGKB91higfdYYoH3WGKB93zmUL+
        C7GpOE56y5O8eUwhd1BQxSz3hJBcTbjWwLITQvL1nLjqSFUdhbz5TGkFdIcpHnSHKR50hykedIcpHnSH
        KR50hykedIcpHnSHKR50hykedM9jCrl661HfCtUcX6m6o5A3mykxIfSQqzNFhdUcJ31GnHJ3XGxKS6A7
        TPGgO0zxoDtM8aC7HVOor96m0s1zidJbVfkiD+dE/m32ek2hrjLjGsOC71WaQj39+gwaqOVvL50b+ZnS
        rXWQU70p1FHPcwyZMXlJE46XMcbHqkyhfvniNzJkvwjMhaiMrrQ9m7WZkgsor6N0JpSjjtaQ0Y8Xm0Ku
        Orql36O1tt9XfiKUoWdDKsvY2o6cc0wZXMYW5qTZ7zEoZzA+gRfbkXOOKSrQevylwpi8zgtlqH/Kz5L9
        gjppg1F7n2Ltfw5T8oVkxH7ZpbTBuAtTON43m2FzTBuNpk3hOPvIIkdNqO9LjH77jmZN4RgZoitYjgz5
        f6zT79vRpCnkyxA7Nqe8fFvaaTRnCrkyJB/GG4fXs0sJRlOmkKf7yKXx1PjHUSnJaMYUckqGqA85vuJh
        SjSaMIX9moLkukS5Uy1B4vBeQsWofn01D5vCPk0avSEaDZ/0/lsHyfllql96tFKo36gpbPcTPKFO9rzJ
        IwfoW8CcyfcorgV1O2gK29RkfB+igdpls2kOzAuT05On5deAeg1M4V9dbmVG6ZI7rX+kABWcI2OqW5eW
        OpkponSpNdQlTP9hKcTfDBYyRxWxmzy3jjEjjMubTIlU4FpRE7pOf6iCiVN+kVqQGZPv6J9E+o9KHdgt
        UXPWmENNWvV7TtWdkYeHP0qIQUQl2W6lAAAAAElFTkSuQmCC
</value>
  </data>
</root>